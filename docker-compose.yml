services:
  # prometheus:
  #   image: docker.arvancloud.ir/prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - "/etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - prometheus-data:/prometheus
  #   networks:
  #     - localprom
  #   ports:
  #     - 9090:9090
  # node-exporter:
  #   image: docker.arvancloud.ir/prom/node-exporter
  #   container_name: node_exporter
  #   networks:
  #     - localprom
  #   ports:
  #     - 9100:9100
  # grafana:
  #   image: docker.arvancloud.ir/grafana/grafana:latest
  #   container_name: grafana
  #   networks:
  #     - localprom
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - /etc/grafana/grafana.ini:/etc/grafana/grafana.ini
  kafka-producer:
    build: producer/.
    container_name: kafka-producer
    networks: 
      - localprom
    depends_on:
      - kafka
  kafka-consumer:
    build: consumer/.
    container_name: kafka-consumer
    networks: 
      - localprom
    depends_on:
      - kafka
      - kafka-producer
  # kafka:
  #   image: docker.arvancloud.ir/apache/kafka:latest
  #   container_name: kafka
  #   networks: 
  #     - localprom
  #   ports: 
  #     - 9092:9092
  kafka:
    image: docker.arvancloud.ir/bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    networks:
      - localprom
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
networks:
  localprom:
    driver: bridge

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local